03-04-2023 01:55:58.957 [main] INFO  m.p.s.DotenvPropertySource.addToEnvironment - Initializing Dotenv with DotenvConfig{directory=null, filename=null, ignoreIfMalformed=false, ignoreIfMissing=true, systemProperties=false, prefix=null}
03-04-2023 01:55:58.990 [main] INFO  ai.openfabric.api.Application.logStarting - Starting Application using Java 1.8.0_362 on adedamolas-mbp.home with PID 18576 (/Users/adedamola/IdeaProjects/openfabric-test/openfabric-api/build/classes/java/main started by adedamola in /Users/adedamola/IdeaProjects/openfabric-test)
03-04-2023 01:55:58.991 [main] INFO  ai.openfabric.api.Application.logStartupProfileInfo - The following 2 profiles are active: "base", "local"
03-04-2023 01:55:59.813 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-04-2023 01:55:59.869 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 48 ms. Found 1 JPA repository interfaces.
03-04-2023 01:56:00.748 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-04-2023 01:56:00.759 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-8080"]
03-04-2023 01:56:00.760 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-04-2023 01:56:00.760 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.68]
03-04-2023 01:56:00.862 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-04-2023 01:56:00.863 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1823 ms
03-04-2023 01:56:01.009 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-04-2023 01:56:01.197 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-04-2023 01:56:01.339 [main] INFO  liquibase.database.log - Set default schema name to public
03-04-2023 01:56:01.496 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-04-2023 01:56:01.775 [main] INFO  liquibase.changelog.log - Creating database history table with name: public.databasechangelog
03-04-2023 01:56:01.788 [main] INFO  liquibase.changelog.log - Reading from public.databasechangelog
03-04-2023 01:56:01.904 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-04-2023 01:56:01.905 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/table-schema.xml::EXTENSION::andrei ran successfully in 12ms
03-04-2023 01:56:01.918 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-04-2023 01:56:01.920 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/table-schema.xml::SEQUENCE::andrei ran successfully in 6ms
03-04-2023 01:56:01.934 [main] INFO  liquibase.changelog.log - Table worker created
03-04-2023 01:56:01.936 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/table-schema.xml::WO_01::andrei ran successfully in 12ms
03-04-2023 01:56:01.952 [main] INFO  liquibase.changelog.log - Table port created
03-04-2023 01:56:01.955 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/create_tables_needed_for_workers.xml::WO_02::Adedamola ran successfully in 13ms
03-04-2023 01:56:01.974 [main] INFO  liquibase.changelog.log - Table mount created
03-04-2023 01:56:01.976 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/create_tables_needed_for_workers.xml::WO_04::Adedamola ran successfully in 14ms
03-04-2023 01:56:01.987 [main] INFO  liquibase.changelog.log - Columns command(VARCHAR(255)) added to worker
03-04-2023 01:56:01.990 [main] INFO  liquibase.changelog.log - Columns created(BIGINT) added to worker
03-04-2023 01:56:01.992 [main] INFO  liquibase.changelog.log - Columns image(VARCHAR(255)) added to worker
03-04-2023 01:56:01.995 [main] INFO  liquibase.changelog.log - Columns image_id(VARCHAR(255)) added to worker
03-04-2023 01:56:01.997 [main] INFO  liquibase.changelog.log - Columns status(VARCHAR(255)) added to worker
03-04-2023 01:56:02.000 [main] INFO  liquibase.changelog.log - Columns host_config(VARCHAR(255)) added to worker
03-04-2023 01:56:02.002 [main] INFO  liquibase.changelog.log - Columns state(VARCHAR(255)) added to worker
03-04-2023 01:56:02.004 [main] INFO  liquibase.changelog.log - Columns size_rw(BIGINT) added to worker
03-04-2023 01:56:02.006 [main] INFO  liquibase.changelog.log - Columns size_root_fs(BIGINT) added to worker
03-04-2023 01:56:02.008 [main] INFO  liquibase.changelog.log - Columns worker_id(CHAR(36)) added to port
03-04-2023 01:56:02.011 [main] INFO  liquibase.changelog.log - Columns worker_id(CHAR(36)) added to mount
03-04-2023 01:56:02.015 [main] INFO  liquibase.changelog.log - Foreign key constraint added to worker (id)
03-04-2023 01:56:02.017 [main] INFO  liquibase.changelog.log - Foreign key constraint added to worker (id)
03-04-2023 01:56:02.019 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/add_new_columns_to_workers.xml::WO_05::Adedamola ran successfully in 38ms
03-04-2023 01:56:02.031 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-04-2023 01:56:02.155 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-04-2023 01:56:02.206 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 5.6.12.Final
03-04-2023 01:56:02.396 [main] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03-04-2023 01:56:02.496 [main] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
03-04-2023 01:56:03.212 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03-04-2023 01:56:03.220 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-04-2023 01:56:03.253 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-04-2023 01:56:05.237 [main] INFO  com.yahoo.elide.Elide.registerCustomSerde - Registering serde for type : class java.time.OffsetDateTime
03-04-2023 01:56:05.238 [main] INFO  com.yahoo.elide.Elide.registerCustomSerde - Registering serde for type : class java.time.Instant
03-04-2023 01:56:05.385 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration.getOrDeducePassword - 

Using generated security password: 8cb80b92-9463-4bd9-9a89-0cc576c4ff57

This generated password is for development use only. Your security configuration must be updated before running your application in production.

03-04-2023 01:56:05.510 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7e36d508, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d4531fa, org.springframework.security.web.context.SecurityContextPersistenceFilter@68af8288, org.springframework.security.web.header.HeaderWriterFilter@25e24908, org.springframework.web.filter.CorsFilter@161dd92a, org.springframework.security.web.authentication.logout.LogoutFilter@7ab3f194, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@34ab398b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6173863f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68cb8e52, org.springframework.security.web.session.SessionManagementFilter@14d513ca, org.springframework.security.web.access.ExceptionTranslationFilter@4930213b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70a24463]
03-04-2023 01:56:05.620 [main] WARN  c.g.d.core.DockerClientBuilder.build - 'dockerHttpClient' should be set.Falling back to Jersey, will be an error in future releases.
03-04-2023 01:56:05.909 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
03-04-2023 01:56:05.954 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-8080"]
03-04-2023 01:56:05.963 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
03-04-2023 01:56:05.968 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-04-2023 01:56:05.970 [main] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-04-2023 01:56:05.972 [main] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-04-2023 01:56:05.975 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Pausing ProtocolHandler ["http-nio-8080"]
03-04-2023 01:56:05.976 [main] INFO  o.a.catalina.core.StandardService.log - Stopping service [Tomcat]
03-04-2023 01:56:05.981 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Stopping ProtocolHandler ["http-nio-8080"]
03-04-2023 01:56:05.982 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Destroying ProtocolHandler ["http-nio-8080"]
03-04-2023 01:56:05.990 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener.logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
03-04-2023 01:56:06.011 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter.report - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

03-04-2023 01:57:00.720 [main] INFO  m.p.s.DotenvPropertySource.addToEnvironment - Initializing Dotenv with DotenvConfig{directory=null, filename=null, ignoreIfMalformed=false, ignoreIfMissing=true, systemProperties=false, prefix=null}
03-04-2023 01:57:00.749 [main] INFO  ai.openfabric.api.Application.logStarting - Starting Application using Java 1.8.0_362 on adedamolas-mbp.home with PID 18595 (/Users/adedamola/IdeaProjects/openfabric-test/openfabric-api/build/classes/java/main started by adedamola in /Users/adedamola/IdeaProjects/openfabric-test)
03-04-2023 01:57:00.750 [main] INFO  ai.openfabric.api.Application.logStartupProfileInfo - The following 2 profiles are active: "base", "local"
03-04-2023 01:57:01.515 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-04-2023 01:57:01.565 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 42 ms. Found 1 JPA repository interfaces.
03-04-2023 01:57:02.474 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-04-2023 01:57:02.484 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-8080"]
03-04-2023 01:57:02.485 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-04-2023 01:57:02.485 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.68]
03-04-2023 01:57:02.588 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-04-2023 01:57:02.588 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1794 ms
03-04-2023 01:57:02.740 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-04-2023 01:57:02.941 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-04-2023 01:57:03.078 [main] INFO  liquibase.database.log - Set default schema name to public
03-04-2023 01:57:03.225 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-04-2023 01:57:03.484 [main] INFO  liquibase.changelog.log - Creating database history table with name: public.databasechangelog
03-04-2023 01:57:03.496 [main] INFO  liquibase.changelog.log - Reading from public.databasechangelog
03-04-2023 01:57:03.612 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-04-2023 01:57:03.614 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/table-schema.xml::EXTENSION::andrei ran successfully in 14ms
03-04-2023 01:57:03.625 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-04-2023 01:57:03.627 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/table-schema.xml::SEQUENCE::andrei ran successfully in 6ms
03-04-2023 01:57:03.641 [main] INFO  liquibase.changelog.log - Table worker created
03-04-2023 01:57:03.643 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/table-schema.xml::WO_01::andrei ran successfully in 12ms
03-04-2023 01:57:03.659 [main] INFO  liquibase.changelog.log - Table port created
03-04-2023 01:57:03.661 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/create_tables_needed_for_workers.xml::WO_02::Adedamola ran successfully in 12ms
03-04-2023 01:57:03.674 [main] INFO  liquibase.changelog.log - Table mount created
03-04-2023 01:57:03.677 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/create_tables_needed_for_workers.xml::WO_04::Adedamola ran successfully in 11ms
03-04-2023 01:57:03.687 [main] INFO  liquibase.changelog.log - Columns command(VARCHAR(255)) added to worker
03-04-2023 01:57:03.689 [main] INFO  liquibase.changelog.log - Columns created(BIGINT) added to worker
03-04-2023 01:57:03.691 [main] INFO  liquibase.changelog.log - Columns image(VARCHAR(255)) added to worker
03-04-2023 01:57:03.693 [main] INFO  liquibase.changelog.log - Columns image_id(VARCHAR(255)) added to worker
03-04-2023 01:57:03.695 [main] INFO  liquibase.changelog.log - Columns status(VARCHAR(255)) added to worker
03-04-2023 01:57:03.697 [main] INFO  liquibase.changelog.log - Columns host_config(VARCHAR(255)) added to worker
03-04-2023 01:57:03.698 [main] INFO  liquibase.changelog.log - Columns state(VARCHAR(255)) added to worker
03-04-2023 01:57:03.700 [main] INFO  liquibase.changelog.log - Columns size_rw(BIGINT) added to worker
03-04-2023 01:57:03.702 [main] INFO  liquibase.changelog.log - Columns size_root_fs(BIGINT) added to worker
03-04-2023 01:57:03.704 [main] INFO  liquibase.changelog.log - Columns worker_id(CHAR(36)) added to port
03-04-2023 01:57:03.706 [main] INFO  liquibase.changelog.log - Columns worker_id(CHAR(36)) added to mount
03-04-2023 01:57:03.709 [main] INFO  liquibase.changelog.log - Foreign key constraint added to worker (id)
03-04-2023 01:57:03.711 [main] INFO  liquibase.changelog.log - Foreign key constraint added to worker (id)
03-04-2023 01:57:03.713 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/add_new_columns_to_workers.xml::WO_05::Adedamola ran successfully in 32ms
03-04-2023 01:57:03.721 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-04-2023 01:57:03.833 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-04-2023 01:57:03.890 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 5.6.12.Final
03-04-2023 01:57:04.063 [main] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03-04-2023 01:57:04.162 [main] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
03-04-2023 01:57:04.890 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03-04-2023 01:57:04.899 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-04-2023 01:57:04.932 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-04-2023 01:57:06.764 [main] INFO  com.yahoo.elide.Elide.registerCustomSerde - Registering serde for type : class java.time.Instant
03-04-2023 01:57:06.764 [main] INFO  com.yahoo.elide.Elide.registerCustomSerde - Registering serde for type : class java.time.OffsetDateTime
03-04-2023 01:57:06.915 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration.getOrDeducePassword - 

Using generated security password: db3e1be2-7651-49c4-83e5-ff84ef1b88b0

This generated password is for development use only. Your security configuration must be updated before running your application in production.

03-04-2023 01:57:07.013 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6166aac5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e36d508, org.springframework.security.web.context.SecurityContextPersistenceFilter@be9cc86, org.springframework.security.web.header.HeaderWriterFilter@67372d20, org.springframework.web.filter.CorsFilter@161dd92a, org.springframework.security.web.authentication.logout.LogoutFilter@64a4739, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8dc3019, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c79915a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d4531fa, org.springframework.security.web.session.SessionManagementFilter@7772ec28, org.springframework.security.web.access.ExceptionTranslationFilter@1a22c1ba, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5fa9971f]
03-04-2023 01:57:07.119 [main] WARN  c.g.d.core.DockerClientBuilder.build - 'dockerHttpClient' should be set.Falling back to Jersey, will be an error in future releases.
03-04-2023 01:57:07.450 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
03-04-2023 01:57:07.509 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-8080"]
03-04-2023 01:57:07.534 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-04-2023 01:57:07.777 [main] INFO  ai.openfabric.api.Application.logStarted - Started Application in 7.481 seconds (JVM running for 7.924)
03-04-2023 01:57:08.839 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-04-2023 01:57:08.839 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-04-2023 01:57:08.841 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 2 ms
03-04-2023 01:57:15.462 [http-nio-8080-exec-2] WARN  c.g.d.core.DockerClientBuilder.build - 'dockerHttpClient' should be set.Falling back to Jersey, will be an error in future releases.
03-04-2023 01:57:16.350 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.396 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.403 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:57:16.413 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.418 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.422 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:57:16.428 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.432 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.435 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:57:16.441 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.445 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.448 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:57:16.454 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.458 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.462 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:57:16.469 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.472 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.475 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:57:16.481 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.485 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.488 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:57:16.494 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.497 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.501 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:57:16.506 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.510 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.513 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:57:16.519 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.524 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.527 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:57:16.534 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.538 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.543 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:57:16.550 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:57:16.555 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:57:16.559 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 0, SQLState: 22001
03-04-2023 01:57:16.560 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - ERROR: value too long for type character varying(255)
03-04-2023 01:57:16.562 [http-nio-8080-exec-2] INFO  o.h.e.j.b.internal.AbstractBatchImpl.release - HHH000010: On release of batch it still contained JDBC statements
03-04-2023 01:57:53.166 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-04-2023 01:57:53.168 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-04-2023 01:57:53.171 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-04-2023 01:58:00.842 [main] INFO  m.p.s.DotenvPropertySource.addToEnvironment - Initializing Dotenv with DotenvConfig{directory=null, filename=null, ignoreIfMalformed=false, ignoreIfMissing=true, systemProperties=false, prefix=null}
03-04-2023 01:58:00.868 [main] INFO  ai.openfabric.api.Application.logStarting - Starting Application using Java 1.8.0_362 on adedamolas-mbp.home with PID 18602 (/Users/adedamola/IdeaProjects/openfabric-test/openfabric-api/build/classes/java/main started by adedamola in /Users/adedamola/IdeaProjects/openfabric-test)
03-04-2023 01:58:00.868 [main] INFO  ai.openfabric.api.Application.logStartupProfileInfo - The following 2 profiles are active: "base", "local"
03-04-2023 01:58:01.664 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-04-2023 01:58:01.718 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 45 ms. Found 1 JPA repository interfaces.
03-04-2023 01:58:02.659 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-04-2023 01:58:02.671 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-8080"]
03-04-2023 01:58:02.671 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-04-2023 01:58:02.672 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.68]
03-04-2023 01:58:02.782 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-04-2023 01:58:02.783 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1865 ms
03-04-2023 01:58:02.944 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-04-2023 01:58:03.157 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-04-2023 01:58:03.320 [main] INFO  liquibase.database.log - Set default schema name to public
03-04-2023 01:58:03.454 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-04-2023 01:58:03.867 [main] INFO  liquibase.changelog.log - Reading from public.databasechangelog
03-04-2023 01:58:03.958 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-04-2023 01:58:04.135 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-04-2023 01:58:04.225 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 5.6.12.Final
03-04-2023 01:58:04.491 [main] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03-04-2023 01:58:04.606 [main] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
03-04-2023 01:58:05.420 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03-04-2023 01:58:05.430 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-04-2023 01:58:05.457 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-04-2023 01:58:07.708 [main] INFO  com.yahoo.elide.Elide.registerCustomSerde - Registering serde for type : class java.time.OffsetDateTime
03-04-2023 01:58:07.709 [main] INFO  com.yahoo.elide.Elide.registerCustomSerde - Registering serde for type : class java.time.Instant
03-04-2023 01:58:07.941 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration.getOrDeducePassword - 

Using generated security password: db8bbee9-5ad0-47c1-b757-63e0e4b26038

This generated password is for development use only. Your security configuration must be updated before running your application in production.

03-04-2023 01:58:08.089 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@478cc5f1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@245b0bd7, org.springframework.security.web.context.SecurityContextPersistenceFilter@27691ee8, org.springframework.security.web.header.HeaderWriterFilter@30b97fcf, org.springframework.web.filter.CorsFilter@161dd92a, org.springframework.security.web.authentication.logout.LogoutFilter@49770ef9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77648321, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ddc889b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bf41cd0, org.springframework.security.web.session.SessionManagementFilter@510bd87a, org.springframework.security.web.access.ExceptionTranslationFilter@5570dc21, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@23119bc3]
03-04-2023 01:58:08.213 [main] WARN  c.g.d.core.DockerClientBuilder.build - 'dockerHttpClient' should be set.Falling back to Jersey, will be an error in future releases.
03-04-2023 01:58:08.576 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
03-04-2023 01:58:08.650 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-8080"]
03-04-2023 01:58:08.674 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-04-2023 01:58:08.904 [main] INFO  ai.openfabric.api.Application.logStarted - Started Application in 8.505 seconds (JVM running for 9.09)
03-04-2023 01:58:38.981 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-04-2023 01:58:38.981 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-04-2023 01:58:38.983 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 2 ms
03-04-2023 01:58:41.369 [http-nio-8080-exec-1] WARN  c.g.d.core.DockerClientBuilder.build - 'dockerHttpClient' should be set.Falling back to Jersey, will be an error in future releases.
03-04-2023 01:58:53.001 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:58:53.040 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:58:53.046 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:58:53.521 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:58:53.526 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:58:53.529 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:58:54.054 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:58:54.060 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:58:54.064 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:58:54.525 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:58:54.530 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:58:54.533 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:59:03.187 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:59:03.193 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:59:03.197 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:59:03.864 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:59:03.869 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:59:03.872 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:59:04.309 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:59:04.315 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:59:04.318 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:59:04.746 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:59:04.751 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:59:04.755 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:59:05.465 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:59:05.469 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:59:05.473 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:59:05.862 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:59:05.866 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:59:05.870 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:59:06.263 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:59:06.268 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:59:06.271 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 01:59:07.136 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 01:59:07.141 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 01:59:07.147 [http-nio-8080-exec-1] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 0, SQLState: 22001
03-04-2023 01:59:07.148 [http-nio-8080-exec-1] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - ERROR: value too long for type character varying(255)
03-04-2023 01:59:07.149 [http-nio-8080-exec-1] INFO  o.h.e.j.b.internal.AbstractBatchImpl.release - HHH000010: On release of batch it still contained JDBC statements
03-04-2023 02:00:56.631 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool.run - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m52s767ms).
03-04-2023 02:00:57.366 [http-nio-8080-exec-2] WARN  c.g.d.core.DockerClientBuilder.build - 'dockerHttpClient' should be set.Falling back to Jersey, will be an error in future releases.
03-04-2023 02:00:59.334 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:00:59.338 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:00:59.341 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:00.554 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:00.559 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:02.215 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:02.219 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:02.846 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:02.850 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:02.854 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:03.317 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:03.321 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:03.324 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:03.792 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:03.795 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:03.798 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:04.268 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:04.272 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:04.276 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:04.779 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:04.783 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:04.786 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:05.329 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:05.333 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:05.336 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:06.180 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:06.185 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:06.188 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:06.753 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:06.758 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:06.762 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:07.214 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:07.219 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:07.223 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 0, SQLState: 22001
03-04-2023 02:01:07.223 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - ERROR: value too long for type character varying(255)
03-04-2023 02:01:07.224 [http-nio-8080-exec-2] INFO  o.h.e.j.b.internal.AbstractBatchImpl.release - HHH000010: On release of batch it still contained JDBC statements
03-04-2023 02:01:17.934 [http-nio-8080-exec-3] WARN  c.g.d.core.DockerClientBuilder.build - 'dockerHttpClient' should be set.Falling back to Jersey, will be an error in future releases.
03-04-2023 02:01:18.446 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:18.450 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:18.453 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:19.139 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:19.142 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:19.931 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:19.935 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:19.938 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:20.548 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:20.552 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:20.555 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:20.985 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:20.989 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:20.993 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:21.421 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:21.424 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:21.808 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:21.812 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:21.815 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:37.593 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:37.597 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:37.600 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:39.702 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:39.706 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:39.710 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:01:41.404 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:41.408 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:46.694 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:01:46.697 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:01:46.701 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:02:08.273 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:02:08.277 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:02:08.280 [http-nio-8080-exec-3] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 0, SQLState: 22001
03-04-2023 02:02:08.281 [http-nio-8080-exec-3] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - ERROR: value too long for type character varying(255)
03-04-2023 02:02:08.281 [http-nio-8080-exec-3] INFO  o.h.e.j.b.internal.AbstractBatchImpl.release - HHH000010: On release of batch it still contained JDBC statements
03-04-2023 02:03:25.260 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool.run - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m16s988ms).
03-04-2023 02:03:42.309 [main] INFO  m.p.s.DotenvPropertySource.addToEnvironment - Initializing Dotenv with DotenvConfig{directory=null, filename=null, ignoreIfMalformed=false, ignoreIfMissing=true, systemProperties=false, prefix=null}
03-04-2023 02:03:42.340 [main] INFO  ai.openfabric.api.Application.logStarting - Starting Application using Java 1.8.0_362 on adedamolas-mbp.home with PID 18661 (/Users/adedamola/IdeaProjects/openfabric-test/openfabric-api/build/classes/java/main started by adedamola in /Users/adedamola/IdeaProjects/openfabric-test)
03-04-2023 02:03:42.341 [main] INFO  ai.openfabric.api.Application.logStartupProfileInfo - The following 2 profiles are active: "base", "local"
03-04-2023 02:03:43.087 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-04-2023 02:03:43.138 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 43 ms. Found 1 JPA repository interfaces.
03-04-2023 02:03:44.027 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-04-2023 02:03:44.038 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-8080"]
03-04-2023 02:03:44.039 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-04-2023 02:03:44.039 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.68]
03-04-2023 02:03:44.150 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-04-2023 02:03:44.151 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1764 ms
03-04-2023 02:03:44.283 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-04-2023 02:03:44.461 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-04-2023 02:03:44.592 [main] INFO  liquibase.database.log - Set default schema name to public
03-04-2023 02:03:44.727 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-04-2023 02:03:44.992 [main] INFO  liquibase.changelog.log - Creating database history table with name: public.databasechangelog
03-04-2023 02:03:45.002 [main] INFO  liquibase.changelog.log - Reading from public.databasechangelog
03-04-2023 02:03:45.118 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-04-2023 02:03:45.120 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/table-schema.xml::EXTENSION::andrei ran successfully in 11ms
03-04-2023 02:03:45.132 [main] INFO  liquibase.changelog.log - Custom SQL executed
03-04-2023 02:03:45.133 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/table-schema.xml::SEQUENCE::andrei ran successfully in 5ms
03-04-2023 02:03:45.146 [main] INFO  liquibase.changelog.log - Table worker created
03-04-2023 02:03:45.148 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/table-schema.xml::WO_01::andrei ran successfully in 10ms
03-04-2023 02:03:45.162 [main] INFO  liquibase.changelog.log - Table port created
03-04-2023 02:03:45.164 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/create_tables_needed_for_workers.xml::WO_02::Adedamola ran successfully in 11ms
03-04-2023 02:03:45.176 [main] INFO  liquibase.changelog.log - Table mount created
03-04-2023 02:03:45.178 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/create_tables_needed_for_workers.xml::WO_04::Adedamola ran successfully in 10ms
03-04-2023 02:03:45.187 [main] INFO  liquibase.changelog.log - Columns command(VARCHAR(432)) added to worker
03-04-2023 02:03:45.189 [main] INFO  liquibase.changelog.log - Columns created(BIGINT) added to worker
03-04-2023 02:03:45.191 [main] INFO  liquibase.changelog.log - Columns image(VARCHAR(255)) added to worker
03-04-2023 02:03:45.193 [main] INFO  liquibase.changelog.log - Columns image_id(VARCHAR(255)) added to worker
03-04-2023 02:03:45.194 [main] INFO  liquibase.changelog.log - Columns status(VARCHAR(255)) added to worker
03-04-2023 02:03:45.196 [main] INFO  liquibase.changelog.log - Columns host_config(VARCHAR(255)) added to worker
03-04-2023 02:03:45.198 [main] INFO  liquibase.changelog.log - Columns state(VARCHAR(255)) added to worker
03-04-2023 02:03:45.199 [main] INFO  liquibase.changelog.log - Columns size_rw(BIGINT) added to worker
03-04-2023 02:03:45.201 [main] INFO  liquibase.changelog.log - Columns size_root_fs(BIGINT) added to worker
03-04-2023 02:03:45.203 [main] INFO  liquibase.changelog.log - Columns worker_id(CHAR(36)) added to port
03-04-2023 02:03:45.204 [main] INFO  liquibase.changelog.log - Columns worker_id(CHAR(36)) added to mount
03-04-2023 02:03:45.208 [main] INFO  liquibase.changelog.log - Foreign key constraint added to worker (id)
03-04-2023 02:03:45.210 [main] INFO  liquibase.changelog.log - Foreign key constraint added to worker (id)
03-04-2023 02:03:45.212 [main] INFO  liquibase.changelog.log - ChangeSet db/changelog/add_new_columns_to_workers.xml::WO_05::Adedamola ran successfully in 30ms
03-04-2023 02:03:45.220 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-04-2023 02:03:45.332 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-04-2023 02:03:45.386 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 5.6.12.Final
03-04-2023 02:03:45.576 [main] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03-04-2023 02:03:45.688 [main] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
03-04-2023 02:03:46.423 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03-04-2023 02:03:46.431 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-04-2023 02:03:46.453 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-04-2023 02:03:48.562 [main] INFO  com.yahoo.elide.Elide.registerCustomSerde - Registering serde for type : class java.time.Instant
03-04-2023 02:03:48.564 [main] INFO  com.yahoo.elide.Elide.registerCustomSerde - Registering serde for type : class java.time.OffsetDateTime
03-04-2023 02:03:48.873 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration.getOrDeducePassword - 

Using generated security password: 223760ed-8d8b-4ca4-b6e4-74273d7eefa8

This generated password is for development use only. Your security configuration must be updated before running your application in production.

03-04-2023 02:03:49.049 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6166aac5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e36d508, org.springframework.security.web.context.SecurityContextPersistenceFilter@be9cc86, org.springframework.security.web.header.HeaderWriterFilter@67372d20, org.springframework.web.filter.CorsFilter@161dd92a, org.springframework.security.web.authentication.logout.LogoutFilter@64a4739, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8dc3019, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c79915a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d4531fa, org.springframework.security.web.session.SessionManagementFilter@7772ec28, org.springframework.security.web.access.ExceptionTranslationFilter@1a22c1ba, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5fa9971f]
03-04-2023 02:03:49.413 [main] WARN  c.g.d.core.DockerClientBuilder.build - 'dockerHttpClient' should be set.Falling back to Jersey, will be an error in future releases.
03-04-2023 02:03:50.087 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
03-04-2023 02:03:50.209 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-8080"]
03-04-2023 02:03:50.239 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-04-2023 02:03:50.542 [main] INFO  ai.openfabric.api.Application.logStarted - Started Application in 8.604 seconds (JVM running for 9.055)
03-04-2023 02:03:53.715 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
03-04-2023 02:03:53.716 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
03-04-2023 02:03:53.717 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
03-04-2023 02:03:53.756 [http-nio-8080-exec-1] WARN  c.g.d.core.DockerClientBuilder.build - 'dockerHttpClient' should be set.Falling back to Jersey, will be an error in future releases.
03-04-2023 02:03:54.645 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.684 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.691 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.701 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.704 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.707 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.713 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.716 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.719 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.726 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.731 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.734 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.740 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.744 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.748 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.754 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.758 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.761 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.767 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.770 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.773 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.778 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.782 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.785 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.791 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.795 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.798 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.805 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.810 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.813 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.820 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.825 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.828 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.834 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.838 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.840 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.845 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.849 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.851 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.856 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.860 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.862 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.868 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.871 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.874 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:03:54.879 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - select worker0_.id as id1_4_0_, worker0_.created_at as created_2_4_0_, worker0_.deleted_at as deleted_3_4_0_, worker0_.updated_at as updated_4_4_0_, worker0_.command as command5_4_0_, worker0_.created as created6_4_0_, worker0_.host_config as host_con7_4_0_, worker0_.image as image8_4_0_, worker0_.image_id as image_id9_4_0_, worker0_.name as name10_4_0_, worker0_.size_root_fs as size_ro11_4_0_, worker0_.size_rw as size_rw12_4_0_, worker0_.state as state13_4_0_, worker0_.status as status14_4_0_ from public.worker worker0_ where worker0_.id=?
03-04-2023 02:03:54.883 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - insert into public.worker (created_at, deleted_at, updated_at, command, created, host_config, image, image_id, name, size_root_fs, size_rw, state, status, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
03-04-2023 02:03:54.885 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - update public.worker set created_at=?, deleted_at=?, updated_at=?, command=?, created=?, host_config=?, image=?, image_id=?, name=?, size_root_fs=?, size_rw=?, state=?, status=? where id=?
03-04-2023 02:04:40.365 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.destroy - Closing JPA EntityManagerFactory for persistence unit 'default'
03-04-2023 02:04:40.367 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown initiated...
03-04-2023 02:04:40.370 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close - HikariPool-1 - Shutdown completed.
03-04-2023 02:04:48.319 [main] INFO  m.p.s.DotenvPropertySource.addToEnvironment - Initializing Dotenv with DotenvConfig{directory=null, filename=null, ignoreIfMalformed=false, ignoreIfMissing=true, systemProperties=false, prefix=null}
03-04-2023 02:04:48.346 [main] INFO  ai.openfabric.api.Application.logStarting - Starting Application using Java 1.8.0_362 on adedamolas-mbp.home with PID 18674 (/Users/adedamola/IdeaProjects/openfabric-test/openfabric-api/build/classes/java/main started by adedamola in /Users/adedamola/IdeaProjects/openfabric-test)
03-04-2023 02:04:48.347 [main] INFO  ai.openfabric.api.Application.logStartupProfileInfo - The following 2 profiles are active: "base", "local"
03-04-2023 02:04:49.322 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
03-04-2023 02:04:49.377 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 46 ms. Found 1 JPA repository interfaces.
03-04-2023 02:04:50.451 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
03-04-2023 02:04:50.466 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-8080"]
03-04-2023 02:04:50.467 [main] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
03-04-2023 02:04:50.468 [main] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.68]
03-04-2023 02:04:50.602 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
03-04-2023 02:04:50.603 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 2196 ms
03-04-2023 02:04:50.789 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
03-04-2023 02:04:51.005 [main] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
03-04-2023 02:04:51.190 [main] INFO  liquibase.database.log - Set default schema name to public
03-04-2023 02:04:51.325 [main] INFO  liquibase.lockservice.log - Successfully acquired change log lock
03-04-2023 02:04:51.897 [main] INFO  liquibase.changelog.log - Reading from public.databasechangelog
03-04-2023 02:04:51.978 [main] INFO  liquibase.lockservice.log - Successfully released change log lock
03-04-2023 02:04:52.116 [main] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [name: default]
03-04-2023 02:04:52.178 [main] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate ORM core version 5.6.12.Final
03-04-2023 02:04:52.375 [main] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
03-04-2023 02:04:52.477 [main] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
03-04-2023 02:04:53.235 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator.initiateService - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
03-04-2023 02:04:53.244 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
03-04-2023 02:04:53.268 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
03-04-2023 02:04:55.330 [main] INFO  com.yahoo.elide.Elide.registerCustomSerde - Registering serde for type : class java.time.OffsetDateTime
03-04-2023 02:04:55.331 [main] INFO  com.yahoo.elide.Elide.registerCustomSerde - Registering serde for type : class java.time.Instant
03-04-2023 02:04:55.490 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration.getOrDeducePassword - 

Using generated security password: c202804a-dc23-4384-828f-b68c0656dc87

This generated password is for development use only. Your security configuration must be updated before running your application in production.

03-04-2023 02:04:55.600 [main] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@245b0bd7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3bf41cd0, org.springframework.security.web.context.SecurityContextPersistenceFilter@78a34c47, org.springframework.security.web.header.HeaderWriterFilter@b791e6e, org.springframework.web.filter.CorsFilter@161dd92a, org.springframework.security.web.authentication.logout.LogoutFilter@15bcecf9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43201f84, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ec3689b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2748bd6c, org.springframework.security.web.session.SessionManagementFilter@3d213a2b, org.springframework.security.web.access.ExceptionTranslationFilter@1477d4e6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@32f54c2a]
03-04-2023 02:04:55.720 [main] WARN  c.g.d.core.DockerClientBuilder.build - 'dockerHttpClient' should be set.Falling back to Jersey, will be an error in future releases.
03-04-2023 02:04:56.058 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
03-04-2023 02:04:56.123 [main] INFO  o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-8080"]
03-04-2023 02:04:56.148 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
03-04-2023 02:04:56.407 [main] INFO  ai.openfabric.api.Application.logStarted - Started Application in 8.55 seconds (JVM running for 9.114)
